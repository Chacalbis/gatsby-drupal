<?php

/**
 * @file
 * Contains forms_alteration.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\StringTranslation\StringTranslationTrait;

/**
 * Implements hook_help().
 */
function forms_alteration_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the forms_alteration module.
    case 'help.page.forms_alteration':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Enable modifications on multiple forms from Drupal Core') . '</p>';
      return $output;

    default:
  }
}

/**
 * implements hook_form_alter().
 *
 * Adjust rights of term fields for specific roles
 */
function forms_alteration_form_alter(
  &$form,
  FormStateInterface $form_state,
  $form_id
) {
  $current_user = \Drupal::currentUser();
  $roles = $current_user->getRoles();
  if (in_array('webmaster', $roles)) {
    $matching_terms = [];
    $vocabularies = ['type_de_lien_direct', 'zone_definie'];
    foreach ($vocabularies as $vocabulary_name) {
      $terms = \Drupal::entityTypeManager()
                      ->getStorage('taxonomy_term')
                      ->loadTree($vocabulary_name);
      foreach ($terms as $term) {
        $matching_terms[] = 'taxonomy_term_' . $term->vid . '_form';
      }
    }
    if (in_array($form_id, $matching_terms)) {
      $form['name']['#access'] = FALSE;
    }
  }
}

/**
 * Implements hook_field_widget_WIDGET_TYPE_form_alter().
 *
 * Add description on link field only for menu_link_content_form
 */
function forms_alteration_field_widget_link_default_form_alter(
  &$element,
  \Drupal\Core\Form\FormStateInterface $form_state,
  $context
) {
  if ($form_state->getBuildInfo()['form_id'] === 'menu_link_content_menu_link_content_form') {
    $element['uri']['#description']['#items'][] = t('Type %no-link if your link is active and has children but doesn\'t point directly to a specific page.',
      ['%no-link' => 'route:<nolink>']);
  }
}
